# Facts: The knowledge base containing information about facts
facts = {
    'a': True,
    'b': True,
    'c': False
}

# Rules: Each rule is a tuple (conclusion, [conditions])
rules = [
    ('d', ['a', 'b']),   # d can be concluded if a and b are true
    ('e', ['b', 'c']),   # e can be concluded if b and c are true
    ('f', ['d', 'e'])    # f can be concluded if d and e are true
]

# Backward Chaining Function
def backward_chaining(goal, facts, rules):
    # If the goal is already known in facts
    if goal in facts:
        return facts[goal]

    # Check if goal can be inferred from rules
    for head, body in rules:
        if head == goal:
            if all(backward_chaining(condition, facts, rules) for condition in body):
                return True

    # If goal cannot be inferred
    return False

# Example Usage
goal = 'f'

if backward_chaining(goal, facts, rules):
    print(f"The goal '{goal}' can be achieved.")
else:
    print(f"The goal '{goal}' cannot be achieved.")
